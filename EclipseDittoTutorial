Links to tutorials:
	https://github.com/eclipse/ditto-examples/tree/master/mqtt-quick-introduction
	https://github.com/eclipse/ditto-examples/tree/master/mqtt-bidirectional

Download the WSL2 linux kernel package:
	https://docs.microsoft.com/en-gb/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package

Convert WSL 1 para WSL 2:
	wsl --set-version Ubuntu-20.04 2

Open Ubuntu terminal:
	cd /mnt/c/GitHub/Docker/Eclipse\ Ditto
	git clone https://github.com/eclipse/ditto.git
	sudo apt update
	sudo apt upgrade

cd ditto/deployment/docker:
	code .
	(Copy/paste docker-compose.yml)

	docker-compose up -d
	curl -u devops:foobar http://localhost:8082/status/health | jq

Create Policy:
	cd
	cd ditto/policies
	sudo nano policy.json (Linux)
	curl -X PUT 'http://localhost:8082/api/2/policies/DTw:policy' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @policy.json | jq
	code policy.json (Windows)
	curl -X PUT http://localhost:8082/api/2/policies/DTw:policy -u ditto:ditto -H Content-Type:application/json -d @policy.json | jq

Create MQTT connection:
	cd
	cd ditto/connectivity
	sudo nano mqttProtocolConnect.json (Linux)
	curl -X POST 'http://localhost:8082/devops/piggyback/connectivity?timeout=10' -u 'devops:foobar' -H 'Content-Type: application/json' -d @mqttProtocolConnect.json | jq
	code mqttProtocolConnect.json (Windows)
	curl -X POST http://localhost:8082/devops/piggyback/connectivity?timeout=10 -u devops:foobar -H Content-Type:application/json -d @mqttProtocolConnect.json | jq

Create Things:
	cd
	cd ditto/things
	sudo nano OmronTM5.json (Linux)
	curl -X PUT 'http://localhost:8082/api/2/things/IoT:OmronTM5' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @OmronTM5.json | jq
	code OmronTM5.json (Windows)
	curl -X PUT http://localhost:8082/api/2/things/IoT:OmronTM5 -u ditto:ditto -H Content-Type:application/json -d @OmronTM5.json | jq
	
	sudo nano XDK.json (Linux)
	curl -X PUT 'http://localhost:8082/api/2/things/IoT:XDK' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @XDK.json | jq
	code XDK.json (Windows)
	curl -X PUT http://localhost:8082/api/2/things/IoT:XDK -u ditto:ditto -H Content-Type:application/json -d @XDK.json | jq
	
	sudo nano LimeSDR.json (Linux)
	curl -X PUT 'http://localhost:8082/api/2/things/IoT:LimeSDR' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @LimeSDR.json | jq
	code LimeSDR.json (Windows)
	curl -X PUT http://localhost:8082/api/2/things/IoT:LimeSDR -u ditto:ditto -H Content-Type:application/json -d @LimeSDR.json | jq
	
	sudo nano RollcoBF80MConveyor.json (Linux)
	curl -X PUT 'http://localhost:8082/api/2/things/IoT:RollcoBF80MConveyor' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @RollcoBF80MConveyor.json | jq
	code RollcoBF80MConveyor.json (Windows)
	curl -X PUT http://localhost:8082/api/2/things/IoT:RollcoBF80MConveyor -u ditto:ditto -H Content-Type:application/json -d @RollcoBF80MConveyor.json | jq
	
	sudo nano TestingStation.json (Linux)
	curl -X PUT 'http://localhost:8082/api/2/things/IoT:TestingStation' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @TestingStation.json | jq
	code TestingStation.json (Windows)
	curl -X PUT http://localhost:8082/api/2/things/IoT:TestingStation -u ditto:ditto -H Content-Type:application/json -d @TestingStation.json | jq
	
	sudo nano TestingStationLights.json (Linux)
	curl -X PUT 'http://localhost:8082/api/2/things/IoT:TestingStationLights' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @TestingStationLights.json | jq
	code StationLights.json (Windows)
	curl -X PUT http://localhost:8082/api/2/things/IoT:TestingStationLights -u ditto:ditto -H Content-Type:application/json -d @TestingStationLights.json | jq
	
	sudo nano TestingStationEmergencyButton.json (Linux)
	curl -X PUT 'http://localhost:8082/api/2/things/IoT:TestingStationEmergencyButton' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @TestingStationEmergencyButton.json | jq
	code StationEmergencySwitch.json (Windows)
	curl -X PUT http://localhost:8082/api/2/things/IoT:TestingStationEmergencyButton -u ditto:ditto -H Content-Type:application/json -d @TestingStationEmergencyButton.json | jq
	
	sudo nano AutomaticStation.json (Linux)
	curl -X PUT 'http://localhost:8082/api/2/things/IoT:AutomaticStation' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @AutomaticStation.json | jq
	code TestingStation.json (Windows)
	curl -X PUT http://localhost:8082/api/2/things/IoT:AutomaticStation -u ditto:ditto -H Content-Type:application/json -d @AutomaticStation.json | jq
	
	sudo nano AutomaticStationLights.json (Linux)
	curl -X PUT 'http://localhost:8082/api/2/things/IoT:AutomaticStationLights' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @AutomaticStationLights.json | jq
	code StationSignalLights.json (Windows)
	curl -X PUT http://localhost:8082/api/2/things/IoT:AutomaticStationLights -u ditto:ditto -H Content-Type:application/json -d @AutomaticStationLights.json | jq
	
	sudo nano Component.json
	curl -X PUT 'http://localhost:8082/api/2/things/IoT:Component' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @Component.json | jq
	code Component.json (Windows)
	curl -X PUT http://localhost:8082/api/2/things/IoT:Component -u ditto:ditto -H Content-Type:application/json -d @Component.json | jq

#############################################################################################################################################################
#############################################################################################################################################################
Done
#############################################################################################################################################################
#############################################################################################################################################################

Example Json message to test:
{"thingId": "IoT:thing", "features": {"Teste": {"properties": { "Dia": "10"}}}}

Websockets:
http://localhost:8082/api/2/search/things
http://localhost:8082/api/2/things/IoT:Omron/
ws://ditto:ditto@localhost:8082/ws/2
wss://socketsbay.com/wss/v2/2/demo/

curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"ON"' 'http://192.168.0.69:8082/api/2/things/IoT:Station/features/Logical/properties/Light/Red/Alert'
curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"ON"' 'http://192.168.0.69:8082/api/2/things/IoT:Station/features/Logical/properties/Light/Green/Alert'
curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"OFF"' 'http://192.168.0.69:8082/api/2/things/IoT:Station/features/Logical/properties/Light/Red/Alert'
curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"OFF"' 'http://192.168.0.69:8082/api/2/things/IoT:Station/features/Logical/properties/Light/Green/Alert'
curl -u ditto:ditto -X GET 'http://192.168.0.69:8082/api/2/things/IoT:Station/features/Logical/properties/Light/Red/LED'
curl -u ditto:ditto -X GET 'http://192.168.0.69:8082/api/2/things/IoT:Station/features/Logical/properties/Light/Green/LED'

curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"ON"' 'http://192.168.0.69:8082/api/2/things/IoT:Sensor/features/Logical/properties/Contacts/NC/Load'
curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"ON"' 'http://192.168.0.69:8082/api/2/things/IoT:Sensor/features/Logical/properties/Contacts/NO/Load'
curl -u ditto:ditto -X GET 'http://192.168.0.69:8082/api/2/things/IoT:Sensor/features/Logical/properties/Contacts/NC/Actuator'
curl -u ditto:ditto -X GET 'http://192.168.0.69:8082/api/2/things/IoT:Sensor/features/Logical/properties/Contacts/NO/Actuator'

curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"ON"' 'http://192.168.0.69:8082/api/2/things/IoT:Switch/features/Logical/properties/Contacts/NC/Input'
curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"ON"' 'http://192.168.0.69:8082/api/2/things/IoT:Switch/features/Logical/properties/Contacts/NO/Input'
curl -u ditto:ditto -X GET 'http://192.168.0.69:8082/api/2/things/IoT:Switch/features/Logical/properties/Contacts/NC/Output'
curl -u ditto:ditto -X GET 'http://192.168.0.69:8082/api/2/things/IoT:Switch/features/Logical/properties/Contacts/NO/Output'
