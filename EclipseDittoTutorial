Links to tutorials:
	https://github.com/eclipse/ditto-examples/tree/master/mqtt-quick-introduction
	https://github.com/eclipse/ditto-examples/tree/master/mqtt-bidirectional

Download the WSL2 linux kernel package:
	https://docs.microsoft.com/en-gb/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package

Convert WSL 1 para WSL 2:
	wsl --set-version Ubuntu-20.04 2

Open Ubuntu terminal:
	git clone https://github.com/eclipse/ditto.git
	sudo apt update
	sudo apt upgrade

cd ditto/deployment/docker:
	code .
	(Copy/paste docker-compose.yml)

	docker-compose up -d
	curl -u devops:foobar http://localhost:8082/status/health | jq

Create Policy:
	cd
	cd ditto/policies
	sudo nano policy.json
	curl -X PUT 'http://localhost:8082/api/2/policies/DTw:policy' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @policy.json | jq (Linux)
	curl -X PUT http://localhost:8082/api/2/policies/DTw:policy -u ditto:ditto -H Content-Type:application/json -d @policy.json (Windows)

Create MQTT connection:
	cd
	cd ditto/connectivity
	sudo nano mqttDitto.json
	curl -X POST 'http://localhost:8082/devops/piggyback/connectivity?timeout=10' -u 'devops:foobar' -H 'Content-Type: application/json' -d @mqttDitto.json | jq (Linux)
	curl -X POST http://localhost:8082/devops/piggyback/connectivity?timeout=10 -u devops:foobar -H Content-Type:application/json -d @mqttDitto.json (Windows)

Create Things:
	cd
	cd ditto/things
	sudo nano Omron.json
	curl -X PUT 'http://localhost:8082/api/2/things/IoT:Omron' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @Omron.json | jq (Linux)
	curl -X PUT http://localhost:8082/api/2/things/IoT:Omron -u ditto:ditto -H Content-Type:application/json -d @Omron.json (Windows)
	sudo nano XDK.json
	curl -X PUT 'http://localhost:8082/api/2/things/IoT:XDK' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @XDK.json | jq
	sudo nano SDR.json
	curl -X PUT 'http://localhost:8082/api/2/things/IoT:LimeSDR' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @LimeSDR.json | jq
	sudo nano Lights.json
	curl -X PUT 'http://192.168.0.69:8082/api/2/things/IoT:Lights' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @Lights.json | jq
	sudo nano Station.json
	curl -X PUT 'http://192.168.0.69:8082/api/2/things/IoT:Station' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @Station.json | jq
	sudo nano Switch.json
	curl -X PUT 'http://192.168.0.69:8082/api/2/things/IoT:Switch' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @Switch.json | jq
	sudo nano SignalTower.json
	curl -X PUT 'http://192.168.0.69:8082/api/2/things/IoT:SignalTower' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @SignalTower.json | jq
	
	curl -X PUT 'http://urladdress:8082/api/2/things/IoT:thingname' -u 'ditto:ditto' -H 'Content-Type: application/json' -d @thingname.json | jq

#############################################################################################################################################################
#############################################################################################################################################################
Done
#############################################################################################################################################################
#############################################################################################################################################################

Example Json message to test:
{"thingId": "IoT:thing", "features": {"Teste": {"properties": { "Dia": "10"}}}}

Websockets:
http://localhost:8082/api/2/search/things
http://localhost:8082/api/2/things/IoT:Omron/
ws://ditto:ditto@localhost:8082/ws/2
wss://socketsbay.com/wss/v2/2/demo/

curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"ON"' 'http://192.168.0.69:8082/api/2/things/IoT:Station/features/Logical/properties/Light/Red/Alert'
curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"ON"' 'http://192.168.0.69:8082/api/2/things/IoT:Station/features/Logical/properties/Light/Green/Alert'
curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"OFF"' 'http://192.168.0.69:8082/api/2/things/IoT:Station/features/Logical/properties/Light/Red/Alert'
curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"OFF"' 'http://192.168.0.69:8082/api/2/things/IoT:Station/features/Logical/properties/Light/Green/Alert'
curl -u ditto:ditto -X GET 'http://192.168.0.69:8082/api/2/things/IoT:Station/features/Logical/properties/Light/Red/LED'
curl -u ditto:ditto -X GET 'http://192.168.0.69:8082/api/2/things/IoT:Station/features/Logical/properties/Light/Green/LED'

curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"ON"' 'http://192.168.0.69:8082/api/2/things/IoT:Sensor/features/Logical/properties/Contacts/NC/Load'
curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"ON"' 'http://192.168.0.69:8082/api/2/things/IoT:Sensor/features/Logical/properties/Contacts/NO/Load'
curl -u ditto:ditto -X GET 'http://192.168.0.69:8082/api/2/things/IoT:Sensor/features/Logical/properties/Contacts/NC/Actuator'
curl -u ditto:ditto -X GET 'http://192.168.0.69:8082/api/2/things/IoT:Sensor/features/Logical/properties/Contacts/NO/Actuator'

curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"ON"' 'http://192.168.0.69:8082/api/2/things/IoT:Switch/features/Logical/properties/Contacts/NC/Input'
curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d '"ON"' 'http://192.168.0.69:8082/api/2/things/IoT:Switch/features/Logical/properties/Contacts/NO/Input'
curl -u ditto:ditto -X GET 'http://192.168.0.69:8082/api/2/things/IoT:Switch/features/Logical/properties/Contacts/NC/Output'
curl -u ditto:ditto -X GET 'http://192.168.0.69:8082/api/2/things/IoT:Switch/features/Logical/properties/Contacts/NO/Output'
